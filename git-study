Git工作流程:
克隆Git资源作为工作目录
在克隆的资源上添加、修改、删除文件
如果其他人修改了，可以更新同步到本地仓库
在提交前查看修改
提交修改
在修改文创后，如果发现错误，可以撤回并再次修改并提交


Git工作区、暂存区、版本库、远端仓库
工作区:用户在电脑上的工作文件目录
暂存区:一般存放在.git目录下的index文件中,暂存区也叫索引,用户可以将修改的文件保存在暂存区,等待全部修改完成后提交到版本库中
版本库:工作区有一个隐藏目录,这个目录不算工作区,而是Git的版本库


Git命令:
1.仓库初始化:
git init                        //将当前目录作为Git仓库，并在当前目录下创建./git版本库
git init newrepo                //使用指定的目录创建Git仓库

2.将必要的文件纳入到版本控制(暂存区)
git add filename                       //支持通配符

3.将暂存区的文件提交到Git仓库内
git commit -m "注释信息"        //将暂存区的文件提交到Git仓库内，并记录"注释信息"
git commit                      //将暂存区的文件提交到Git仓库内，并打开Git默认的文本编辑器编辑"注释信息"

4.查看Git状态
git status                      

5.查看Git提交历史
git log                         
git log --oneline               //简化显示Git提交历史

6.Git删除工作区或暂存区文件
git rm filename                 //在暂存区和工作区将文件filename删除
git rm --cached filename        //仅删除暂存区的文件filename

7.Git比较文件的不同(工作区、暂存区、仓库 或者 两个版本、两个分支)
git diff                        //比较工作区和暂存区的文件的不同
git diff --cached               //比较暂存区和仓库最新版本的文件的不同
git diff HEAD                   //比较工作区和仓库最新版本的文件的不同
git diff HEAD^ HEAD~2           //比较仓库最新版本的上一个版本和前两个版本的文件的不同

8.Git回退版本(Git回退回某个版本的默认参数为--mixed)
git reset --mixed               //回退到某一个版本并只保留工作区的内容，不保留暂存区的内容
git reset --soft                //回退到某一个版本，工作区的内容和暂存区的内容都得到保留
git reset --hard                //回退到某一个版本，工作区的内容和暂存区的内容不保留

9.列出暂存区文件
git ls-files

文件".gitignore"的作用:Git会忽略.gitignore里面写的文件名(支持通配符)
1.系统或者软件自动生成的文件
2.编译产生的中间文件和结果文件
3.代码运行时产生的日志文件、缓存文件、临时文件
4.涉及身份、密码、账号、口令、秘钥等敏感信息的文件


